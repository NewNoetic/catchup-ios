# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

platform :ios do
  desc "Push a new beta build to TestFlight"
  lane :beta do
    # Ensure that your git status is not dirty
    ensure_git_status_clean

    run_tests(
        scheme: "catchupTests",
        device: "iPhone 11",
        derived_data_path: "./build/test_derived_data",
        output_directory: "./build/test_output"
    )

    get_certificates(
        output_path: "./build"
    )
    get_provisioning_profile(
        output_path: "./build"
    )

    # Increment the build number (not the version number)
    # Providing the xcodeproj is optional
    increment_build_number(xcodeproj: "catchup.xcodeproj")

    # Commit the version bump
    commit_version_bump(xcodeproj: "catchup.xcodeproj")

    # Add a git tag for this build. This will automatically
    # use an appropriate git tag name
    add_git_tag

    # Push the new commit and tag back to your git remote
    push_to_git_remote
  
    build_app(
        scheme: "catchup",
        output_directory: "./build"
    )
    upload_to_testflight(
        ipa: "./build/CatchUp.ipa"
    )
  end
  
  lane :release do
      # Ensure that your git status is not dirty
      ensure_git_status_clean

      run_tests(scheme: "catchupTests")

      get_certificates(
          output_path: "./build"
      )
      get_provisioning_profile(
          output_path: "./build"
      )

      # Increment the build number (not the version number)
      # Providing the xcodeproj is optional
      increment_build_number

      # Commit the version bump
      commit_version_bump

      # Add a git tag for this build. This will automatically
      # use an appropriate git tag name
      add_git_tag

      # Push the new commit and tag back to your git remote
      push_to_git_remote
    
      build_app(
          scheme: "catchup",
          output_directory: "./build",
          include_bitcode: true
      )
      
      upload_to_app_store
  end
end
